<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[fdisk创建逻辑卷]]></title>
    <url>%2F2019%2F01%2F04%2Ffdisk%E5%88%9B%E5%BB%BA%E9%80%BB%E8%BE%91%E5%8D%B7%2F</url>
    <content type="text"><![CDATA[fdisk创建逻辑分区1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071[root@localhost ~]# fdisk /dev/sdd Welcome to fdisk (util-linux 2.23.2).Changes will remain in memory only, until you decide to write them.Be careful before using the write command.Device does not contain a recognized partition tableBuilding a new DOS disklabel with disk identifier 0x17a3940f.Command (m for help): n #新建分区Partition type: p primary (0 primary, 0 extended, 4 free) #主分区 e extended #扩展分区Select (default p): e #选择逻辑分区Partition number (1-4, default 1): #分区编码，主分区及扩展分区编码为1-4,逻辑分区为5以后First sector (2048-41943039, default 2048): Using default value 2048Last sector, +sectors or +size&#123;K,M,G&#125; (2048-41943039, default 41943039): +2G Partition 1 of type Extended and of size 2 GiB is setCommand (m for help): n #在扩展分区中创建逻辑分区Partition type: p primary (0 primary, 1 extended, 3 free) l logical (numbered from 5)Select (default p): l #选择逻辑卷Adding logical partition 5First sector (4096-4196351, default 4096): Using default value 4096Last sector, +sectors or +size&#123;K,M,G&#125; (4096-4196351, default 4196351): +1GPartition 5 of type Linux and of size 1 GiB is setCommand (m for help): pDisk /dev/sdd: 21.5 GB, 21474836480 bytes, 41943040 sectorsUnits = sectors of 1 * 512 = 512 bytesSector size (logical/physical): 512 bytes / 512 bytesI/O size (minimum/optimal): 512 bytes / 512 bytesDisk label type: dosDisk identifier: 0x17a3940f Device Boot Start End Blocks Id System/dev/sdd1 2048 4196351 2097152 5 Extended/dev/sdd5 4096 2101247 1048576 83 LinuxCommand (m for help): wThe partition table has been altered!Calling ioctl() to re-read partition table.Syncing disks. [root@localhost ~]# mkfs.ext4 /dev/sdd5mke2fs 1.42.9 (28-Dec-2013)Filesystem label=OS type: LinuxBlock size=4096 (log=2)Fragment size=4096 (log=2)Stride=0 blocks, Stripe width=0 blocks65536 inodes, 262144 blocks13107 blocks (5.00%) reserved for the super userFirst data block=0Maximum filesystem blocks=2684354568 block groups32768 blocks per group, 32768 fragments per group8192 inodes per groupSuperblock backups stored on blocks: 32768, 98304, 163840, 229376Allocating group tables: done Writing inode tables: done Creating journal (8192 blocks): doneWriting superblocks and filesystem accounting information: done[root@localhost ~]# mount /dev/sdd5 /root/sky]]></content>
      <tags>
        <tag>fdisk</tag>
        <tag>逻辑分区</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LVM逻辑卷]]></title>
    <url>%2F2019%2F01%2F04%2FLVM%E9%80%BB%E8%BE%91%E5%8D%B7%2F</url>
    <content type="text"><![CDATA[部署逻辑卷1.添加两块硬盘，建立物理卷123[root@localhost ~]# pvcreate /dev/sdb /dev/sdc Physical volume "/dev/sdb" successfully created Physical volume "/dev/sdc" successfully created 2.创建卷组 storage ，并将sdb，sdc加入到卷组stroage12[root@localhost ~]# vgcreate storage /dev/sdb /dev/sdc Volume group "storage" successfully created 3.查看卷组状态123456789101112131415161718192021[root@localhost ~]# vgdisplay --- Volume group --- VG Name storage System ID Format lvm2 Metadata Areas 2 Metadata Sequence No 1 VG Access read/write VG Status resizable MAX LV 0 Cur LV 0 Open LV 0 Max PV 0 Cur PV 2 Act PV 2 VG Size 39.99 GiB PE Size 4.00 MiB Total PE 10238 Alloc PE / Size 0 / 0 Free PE / Size 10238 / 39.99 GiB VG UUID Z9dr3u-7oni-yBLE-rfS9-xJ9g-p2aQ-s1VCUk 4.切割一个约为150MB的逻辑卷设备 #对逻辑卷切割有两种计量单位。使用-L参数 -L 150M 生成150 MB 使用-l参数 -l 37 生成37*4=148MB（每个单元大小默认为4MB，按单元为计量单位）1[root@localhost ~]# lvcreate -n vo -L 150M storage 5.格式化逻辑卷，并挂载123[root@localhost ~]# mkfs.ext4 /dev/storage/vo[root@localhost ~]# mkdir /LVM[root@localhost ~]# mount /dev/storage/vo /LVM/ 6.查看挂载状态，并写入配置文件，使其永久生效1234567891011[root@localhost ~]# df -hFilesystem Size Used Avail Use% Mounted on/dev/sda3 18G 1.3G 17G 7% /devtmpfs 904M 0 904M 0% /devtmpfs 913M 0 913M 0% /dev/shmtmpfs 913M 8.7M 904M 1% /runtmpfs 913M 0 913M 0% /sys/fs/cgroup/dev/sda1 297M 113M 185M 38% /boottmpfs 183M 0 183M 0% /run/user/0/dev/mapper/storage-vo 144M 1.6M 132M 2% /LVM[root@localhost ~]# echo "/dev/storage/vo /LVM/ ext4 defaults 0 0" &gt;&gt; /etc/fstab 扩容逻辑卷1.取消挂载1[root@localhost ~]# umount /LVM/ 2.扩展逻辑卷vo至290MB1234[root@localhost ~]# lvextend -L 290M /dev/storage/vo Rounding size to boundary between physical extents: 292.00 MiB Size of logical volume storage/vo changed from 152.00 MiB (38 extents) to 292.00 MiB (73 extents). Logical volume vo successfully resized. 3.检查硬盘完整性，并重置硬盘容量1234567891011121314[root@localhost ~]# e2fsck -f /dev/storage/vo e2fsck 1.42.9 (28-Dec-2013)Pass 1: Checking inodes, blocks, and sizesPass 2: Checking directory structurePass 3: Checking directory connectivityPass 4: Checking reference countsPass 5: Checking group summary information/dev/storage/vo: 11/38912 files (0.0% non-contiguous), 10567/155648 blocks[root@localhost ~]# resize2fs /dev/storage/vo resize2fs 1.42.9 (28-Dec-2013)Resizing the filesystem on /dev/storage/vo to 299008 (1k) blocks.The filesystem on /dev/storage/vo is now 299008 blocks long. 4.重新挂载，并查看挂载状态12345678[root@localhost ~]# mount /dev/storage/vo /LVM/[root@localhost ~]# df -hFilesystem Size Used Avail Use% Mounted on/dev/sda3 18G 1.3G 17G 7% /devtmpfs 904M 0 904M 0% /devtmpfs 913M 8.7M 904M 1% /runtmpfs 913M 0 913M 0% /sys/fs/cgroup/dev/mapper/storage-vo 279M 2.1M 259M 1% /LVM 缩小逻辑卷1.取消挂载1[root@localhost ~]# umount /LVM/ 2.检查文件系统完整性12345678[root@localhost ~]# e2fsck -f /dev/storage/vo e2fsck 1.42.9 (28-Dec-2013)Pass 1: Checking inodes, blocks, and sizesPass 2: Checking directory structurePass 3: Checking directory connectivityPass 4: Checking reference countsPass 5: Checking group summary information/dev/storage/vo: 11/75776 files (0.0% non-contiguous), 15729/299008 blocks 3.把逻辑卷vo容量减小 到 120MB1234567891011[root@localhost ~]# resize2fs /dev/storage/vo 120Mresize2fs 1.42.9 (28-Dec-2013)Resizing the filesystem on /dev/storage/vo to 122880 (1k) blocks.The filesystem on /dev/storage/vo is now 122880 blocks long.[root@localhost ~]# lvreduce -L 120M /dev/storage/vo WARNING: Reducing active logical volume to 120.00 MiB THIS MAY DESTROY YOUR DATA (filesystem etc.)Do you really want to reduce vo? [y/n]: y Size of logical volume storage/vo changed from 292.00 MiB (73 extents) to 120.00 MiB (30 extents). Logical volume vo successfully resized. 4.重新挂载文件系统并查看系统状态12345678[root@localhost ~]# mount /dev/storage/vo /LVM/[root@localhost ~]# df -hFilesystem Size Used Avail Use% Mounted on/dev/sda3 18G 1.3G 17G 7% /devtmpfs 904M 0 904M 0% /devtmpfs 913M 8.7M 904M 1% /runtmpfs 913M 0 913M 0% /sys/fs/cgroup/dev/mapper/storage-vo 113M 1.6M 103M 2% /LVM 逻辑卷快照#快照卷容量必须等于逻辑卷的已使用容量 #快照卷仅一次有效，一旦执行还原操作后会被立即删除1.查看卷组信息，查看Alloc PE / Size 已使用容量1vgdisplay 后面再写吧]]></content>
      <tags>
        <tag>LVM</tag>
        <tag>逻辑卷</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[RAID磁盘阵列]]></title>
    <url>%2F2018%2F12%2F26%2FRAID%E7%A3%81%E7%9B%98%E9%98%B5%E5%88%97%2F</url>
    <content type="text"><![CDATA[实验环境 实验一.磁盘阵列RAID101mdadm -Cv /dev/md0 -a yes -n 4 -l 10 /dev/sdb /dev/sdc /dev/sdd /dev/sde #代码解释 -C创建磁盘阵列 v显示过程 -a yes 自动创建设备文件 -n 设备数量 -l RAID级别 格式化磁盘阵列为ext4格式1mkfs.ext4 /dev/md #创建挂载点挂载磁盘阵列12mkdir /RAIDmount /dev/md0 /RAID #查看磁盘阵列详细信息123456789101112131415161718192021222324252627282930[root@localhost ~]# mdadm -D /dev/md0 /dev/md0: Version : 1.2 Creation Time : Wed Dec 26 03:22:26 2018 Raid Level : raid10 Array Size : 41910272 (39.97 GiB 42.92 GB) Used Dev Size : 20955136 (19.98 GiB 21.46 GB) Raid Devices : 4 Total Devices : 4 Persistence : Superblock is persistent Update Time : Wed Dec 26 03:28:49 2018 State : active Active Devices : 4Working Devices : 4 Failed Devices : 0 Spare Devices : 0 Layout : near=2 Chunk Size : 512K Name : localhost.localdomain:0 (local to host localhost.localdomain) UUID : 0b9f3d0a:8b626b8e:131f0128:1fa28ac3 Events : 18 Number Major Minor RaidDevice State 0 8 16 0 active sync set-A /dev/sdb 1 8 32 1 active sync set-B /dev/sdc 2 8 48 2 active sync set-A /dev/sdd 3 8 64 3 active sync set-B /dev/sde #写入fstab文件使其永久生效1echo "/dev/md0 /RAID ext4 defaults 0 0"&gt;&gt; /etc/fstab 损坏磁盘阵列修复（假设/dev/sde硬盘出现故障）1234567891011121314151617181920212223242526272829303132[root@localhost ~]# mdadm /dev/md0 -r /dev/sde #移除故障硬盘mdadm: hot removed /dev/sde from /dev/md0[root@localhost ~]# mdadm -D /dev/md0 /dev/md0: Version : 1.2 Creation Time : Wed Dec 26 03:22:26 2018 Raid Level : raid10 Array Size : 41910272 (39.97 GiB 42.92 GB) Used Dev Size : 20955136 (19.98 GiB 21.46 GB) Raid Devices : 4 Total Devices : 3 Persistence : Superblock is persistent Update Time : Wed Dec 26 03:36:44 2018 State : clean, degraded Active Devices : 3Working Devices : 3 Failed Devices : 0 Spare Devices : 0 Layout : near=2 Chunk Size : 512K Name : localhost.localdomain:0 (local to host localhost.localdomain) UUID : 0b9f3d0a:8b626b8e:131f0128:1fa28ac3 Events : 20 Number Major Minor RaidDevice State 0 8 16 0 active sync set-A /dev/sdb 1 8 32 1 active sync set-B /dev/sdc 2 8 48 2 active sync set-A /dev/sdd 6 0 0 6 removed #更换新硬盘123umount /RAIDmdadm /dev/md0 -a /dev/sdemount /dev/md0 /RAID 实验二.创建RAID5+备份盘1234567[root@localhost ~]# mdadm -Cv /dev/md1 -n 3 -l 5 -x 1 /dev/sdf /dev/sdg /dev/sdh /dev/sdi # -x 1表示只有一块备份盘 其中/dev/sdi为备份盘mdadm: layout defaults to left-symmetricmdadm: layout defaults to left-symmetricmdadm: chunk size defaults to 512Kmdadm: size set to 20955136Kmdadm: Defaulting to version 1.2 metadatamdadm: array /dev/md1 started. #将磁盘阵列格式化为ext4格式并挂载123mkfs.ext4 /dev/md1mkdir /RAID5mount /dev/md1 /RAID5 #测试磁盘阵列12345678910111213141516171819202122232425262728293031[root@localhost ~]# mdadm -D /dev/md1 /dev/md1: Version : 1.2 Creation Time : Wed Dec 26 03:47:57 2018 Raid Level : raid5 Array Size : 41910272 (39.97 GiB 42.92 GB) Used Dev Size : 20955136 (19.98 GiB 21.46 GB) Raid Devices : 3 Total Devices : 4 Persistence : Superblock is persistent Update Time : Wed Dec 26 03:58:57 2018 State : clean Active Devices : 3Working Devices : 4 Failed Devices : 0 Spare Devices : 1 Layout : left-symmetric Chunk Size : 512K Name : localhost.localdomain:1 (local to host localhost.localdomain) UUID : 4928d578:315c0579:7e5898c7:0ef21763 Events : 18 Number Major Minor RaidDevice State 0 8 80 0 active sync /dev/sdf 1 8 96 1 active sync /dev/sdg 4 8 112 2 active sync /dev/sdh 3 8 128 - spare /dev/sdi 模拟/dev/sdh硬盘出现故障1mdadm /dev/md1 -f /dev/sdh 查看磁盘阵列信息123456789101112131415161718192021222324252627282930313233[root@localhost ~]# mdadm -D /dev/md1/dev/md1: Version : 1.2 Creation Time : Wed Dec 26 03:47:57 2018 Raid Level : raid5 Array Size : 41910272 (39.97 GiB 42.92 GB) Used Dev Size : 20955136 (19.98 GiB 21.46 GB) Raid Devices : 3 Total Devices : 4 Persistence : Superblock is persistent Update Time : Wed Dec 26 04:04:48 2018 State : clean, degraded, recovering Active Devices : 2Working Devices : 3 Failed Devices : 1 Spare Devices : 1 Layout : left-symmetric Chunk Size : 512K Rebuild Status : 74% complete Name : localhost.localdomain:1 (local to host localhost.localdomain) UUID : 4928d578:315c0579:7e5898c7:0ef21763 Events : 31 Number Major Minor RaidDevice State 0 8 80 0 active sync /dev/sdf 1 8 96 1 active sync /dev/sdg 3 8 128 2 spare rebuilding /dev/sdi 4 8 112 - faulty /dev/sdh]]></content>
      <tags>
        <tag>RAID</tag>
        <tag>磁盘阵列</tag>
        <tag>数据安全</tag>
        <tag>学习记录</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[npm设置淘宝代理]]></title>
    <url>%2F2018%2F12%2F25%2Fnpm%E8%AE%BE%E7%BD%AE%E6%B7%98%E5%AE%9D%E4%BB%A3%E7%90%86%2F</url>
    <content type="text"><![CDATA[淘宝npm官网 原理更改npm源为淘宝源 1npm install -g cnpm --registry=https://registry.npm.taobao.org 使用方法和npm一致，只需要将npm改为cnpm即可。]]></content>
      <tags>
        <tag>npm</tag>
        <tag>cnmp</tag>
        <tag>淘宝代理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo切换next主题]]></title>
    <url>%2F2018%2F12%2F25%2Fhexo%E5%88%87%E6%8D%A2next%E4%B8%BB%E9%A2%98%2F</url>
    <content type="text"><![CDATA[相关链接 安装hexo教程请点这里 更多hexo主题请点这里 Next主题中文文档 安装next主题1.克隆next主题 进入hexo目录1cd hexo 克隆next主题到themes文件夹下并重命名为next1git clone https://github.com/theme-next/hexo-theme-next.git themes/next 2.修改hexo配置文件1vim _config.yml 找到 theme: landscape 替换为theme: next 保存退出 3.编译，本地预览12hexo ghexo s 浏览器打开 http://localhost:4000/ 即可访问 优化next主题切换主题风格next主题共有4种风格Muse（默认）MistPiscesGemini本文以Mist为例 打开主题配置文件(hexo)目录下1vim themes/next/_config.yml 找到12345# Schemesscheme: Muse#scheme: Mist#scheme: Pisces#scheme: Gemini 替换为(想用哪个主题就取消注释，注释其他主题)12345# Schemes#scheme: Musescheme: Mist#scheme: Pisces#scheme: Gemini 菜单栏优化主题配置文件中有首页，关于，分类等多个选项，只要取消相关注释即可可以将菜单栏进行汉化如下图所示 新建tags,about页面主题默认是没有tags以及about页面，需要我们自己创建12hexo new page tagshexo new page about 分别执行命名后可以看到在source目录下创建了tags/index.md 以及 about/index.md其中about/index.md文件可以自由发挥tags/index.md需要按照以下格式进行修改，否则tags页面无法读取标签123456---title: tagsdate: 2018-12-24 19:34:56 #不用改type: "tags"comments: false--- 添加搜索功能 1.安装hexo-generator-searchdb 插件 无法安装点击这里 1npm install hexo-generator-searchdb --save 2.打开hexo配置文件 1vim _config.yml 3.在底端添加以下字段 保存退出 12345search: path: search.xml field: post format: html limit: 10000 4.打开主题配置文件 1vim themes/next/source/_config.yml 找到local search 修改 enable为true 如下图]]></content>
      <tags>
        <tag>hexo</tag>
        <tag>主题，博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F12%2F24%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[centos部署hexo+github+next主题博客]]></title>
    <url>%2F2018%2F12%2F24%2Fcentos%E9%83%A8%E7%BD%B2hexo-github-next%E4%B8%BB%E9%A2%98%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[准备工作 系统环境centos7 用邮箱注册github帐号1.安装Node.js 下载进入node.js官网找到最新版本，复制下载链接，下面以11.5.0版本为例1wget https://nodejs.org/dist/v11.5.0/node-v11.5.0-linux-x64.tar.xz 解压 1tar -xvJf node-v11.5.0-linux-x64.tar.xz #大写J 重命令文件夹并移动文件夹到/usr/local/node目录下 1mv node-v11.5.0-linux-x64.tar.xz /usr/local/node/node 配置环境变量 12echo "export PATH=$PATH:/usr/local/node/bin" &gt;&gt; /etc/profilesource /etc/profile 2.安装Hexo12345mkdir hexocd hexoyum install git-core #安装git，已安装可跳过npm install -g hexo-cli #安装Hexohexo init #初始化Hexo 3.安装Hexo插件 安装报错，安装慢请点击这里12345678910111213npm install hexo-generator-index --savenpm install hexo-generator-archive --savenpm install hexo-generator-category --savenpm install hexo-generator-tag --savenpm install hexo-server --savenpm install hexo-deployer-git --savenpm install hexo-deployer-heroku --savenpm install hexo-deployer-rsync --savenpm install hexo-deployer-openshift --savenpm install hexo-renderer-marked --savenpm install hexo-renderer-stylus --savenpm install hexo-generator-feed --savenpm install hexo-generator-sitemap --save 5.部署github 1.配置本机全局git环境，已配置可跳过12git config --global user.email "example@exp.com" #注册github的邮箱帐号git config --global user.name "username" #github用户名 2.生成ssh密钥 12ssh-keygen -t rsa -C example@exp.com #注册github的邮箱less ~/.ssh/id_rsa.pub #查看ssh公钥，并手动复制 3.创建仓库进入github官网登陆github帐号，创建一个仓库，仓库名称必须为： 用户名.github.io 4.添加ssh密钥到github点击链接https://github.com/settings/ssh 在key输入框粘贴刚才复制的ssh密钥，Title 随便填。 6.修改Hexo配置文件1vim _config.yml #按照以下代码修改文件底端,将username替换成自己的github用户名1234567# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: git@github.com:username/username.github.io.git branch: master message: '站点更新:&#123;&#123;now("YYYY-MM-DD HH/mm/ss")&#125;&#125;' 7.编译并上传代码到github仓库12hexo g #编译hexo d #上传 至此打开浏览器输入你的github仓库名就可访问到你的博客了。下一篇文章将会将如何切换主题以及主题优化]]></content>
      <tags>
        <tag>centos</tag>
        <tag>博客</tag>
        <tag>github</tag>
      </tags>
  </entry>
</search>
